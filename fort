#!/bin/bash
BASE="/usr/local/Caskroom/miniconda/base"
CD="$BASE/bin/conda"

col() {
  case "$1" in
    red)     echo -e "\033[31m$2\033[0m" ;;
    green)   echo -e "\033[32m$2\033[0m" ;;
    yellow)  echo -e "\033[33m$2\033[0m" ;;
    blue)    echo -e "\033[34m$2\033[0m" ;;
    *)       echo -e "$2" ;;
  esac
}

eval "$($CD shell.zsh hook)"

_f_add() {
  if [[ -z "$1" ]]; then
    echo "Usage: f <env_name>";
    return 1;
  fi

  env_name=$1;
  arc=$(arch);
  col blue "New Fortran env '$env_name' on $arc";

  conda create --name "$env_name" -c conda-forge gfortran fpm fprettify fortls -y;
  if [[ $? -eq 0 ]]; then
    conda activate "$env_name";
    col green "Environment '$env_name' created successfully."
  else
    col red "Failed to create environment '$env_name'.";
  fi
}

_f_activate() {
  if [[ -z "$1" ]]; then
    echo "Usage: f activate <env_name>";
    conda env list;
    return 1;
  fi

  \local ask_conda
  ask_conda="$(PS1="${PS1:-}" $CD 'shell.zsh' activate "$1")" || \return 1
  \eval "$ask_conda"
}

f_auto() {
  if [[ -z "$1" ]]; then
    echo "Usage: f <env_name>";
    return 1;
  fi

  env_name="$1";
  if ! f_list | awk '{print $1}' | grep -q "^$env_name$"; then
    _f_add "$env_name"
  fi
  _f_activate "$env_name";
  col blue "Using: $(which gfortran)";
}

f_remove() {
  if [[ -z "$1" ]]; then
    echo "Usage: f remove <env_name>";
    f_list;
    return 1;
  fi

  _f_activate "base";
  conda remove --name "$1" --all -y;
}

f_list() {
  ls "$BASE/envs/";
}

case "$1" in
  remove) f_remove "$2" ;;
  list) f_list ;;
  *) f_auto "$1" ;;
esac
